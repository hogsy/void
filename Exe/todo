
EXE
==============================================================

add simple entity support (sound objects, spawns)
error/logging/handling
command line parms

//low priority, would be nice to have sometime
mpeg playback via directShow services
get a basic directMusic interface going, will have to write a loader stream for that


RENDERER
==============================================================
setup jpeg reading and writing
gl driver issues with 3dfx cards? 



//This should be in a seperate header
typedef int hMdl;
typedef int hSnd;
typedef int hImg;

//Cache type,
enum CacheType
{
	CACHE_EMPTY = 0,	//Default
	CACHE_LOCAL	= 1,	//Always loaded. Client is reponsible for loading these.

	//Server is responsible to tell the client to load the following

	CACHE_GAME	= 2,	//Map specific, should be unloaded on map change
	CACHE_TEMP	= 4,	//Temp object,  should release once it has been used
};



//Use this for all objects the client can draw ? 
//models/images/sprites/particle effects ?
struct R_EntState 
{
	int		 skinnum;

	vector_t &origin;
	vector_t &angle;
};



//Use this to register local models
virtual hMdl RegisterModel(const char * model, CacheType cache)=0;

//Load a model at this index, in this cache
virtual void LoadModel(const char * model, hMdl index, CacheType cache);

//draw a model with these parms
virtual void DrawModel(hMdl index, CacheType cache, 
					   const R_EntState &state)=0;

virtual void UnloadModel(int index, CacheType cache)=0;
virtual void UnloadAll()=0;